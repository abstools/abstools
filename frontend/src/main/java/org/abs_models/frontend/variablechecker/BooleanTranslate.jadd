/* $Id$ */
import org.abs_models.common.*;

import org.abs_models.frontend.analyser.ErrorMessage;
import org.abs_models.frontend.analyser.TypeError;
import org.abs_models.frontend.variablechecker.*;
import org.abs_models.frontend.typechecker.*;

import choco.kernel.model.constraints.*;

import java.util.HashMap;

aspect BooleanTranslate {
    public abstract Constraint AppCond.translateToChoco(ChocoSolver solver);
    public Constraint AppCondOr.translateToChoco(ChocoSolver solver){
        Constraint left = getLeft().translateToChoco(solver);
        Constraint right = getRight().translateToChoco(solver);
        if(left == Choco.TRUE || right == Choco.TRUE) return Choco.TRUE;
        if(left == Choco.FALSE && right == Choco.FALSE) return Choco.FALSE;
        if(left == Choco.FALSE) return right;
        if(right == Choco.FALSE) return left;
        return Choco.or(left, right);
    }
    public Constraint AppCondAnd.translateToChoco(ChocoSolver solver){
        Constraint left = getLeft().translateToChoco(solver);
        Constraint right = getRight().translateToChoco(solver);
        if(left == Choco.FALSE || right == Choco.FALSE) return Choco.FALSE;
        if(left == Choco.TRUE && right == Choco.TRUE) return Choco.TRUE;
        if(left == Choco.TRUE) return right;
        if(right == Choco.TRUE) return left;
        return Choco.and(left, right);
    }
    public Constraint AppCondNot.translateToChoco(ChocoSolver solver){
        Constraint inner = getAppCond().translateToChoco(solver);
        if(inner == Choco.TRUE) return Choco.FALSE;
        if(inner == Choco.FALSE) return Choco.TRUE;
        return Choco.not(inner);
    }
    public Constraint AppCondFeature.translateToChoco(ChocoSolver solver){
        return ChocoSolver.isTrue(solver.getVar(getName())); //XXX
    }
    public Constraint AppCondFalse.translateToChoco(ChocoSolver solver){
        return Choco.FALSE;
    }
    public Constraint AppCondTrue.translateToChoco(ChocoSolver solver){
        return Choco.TRUE;
    }
}
