package gen.ABS.Absyn; // Java Package generated by the BNF Converter.

public abstract class PureExp implements java.io.Serializable {
  public abstract <R,A> R accept(PureExp.Visitor<R,A> v, A arg);
  public interface Visitor <R,A> {
    public R visit(gen.ABS.Absyn.EOr p, A arg);
    public R visit(gen.ABS.Absyn.EAnd p, A arg);
    public R visit(gen.ABS.Absyn.EEq p, A arg);
    public R visit(gen.ABS.Absyn.ENeq p, A arg);
    public R visit(gen.ABS.Absyn.ELt p, A arg);
    public R visit(gen.ABS.Absyn.ELe p, A arg);
    public R visit(gen.ABS.Absyn.EGt p, A arg);
    public R visit(gen.ABS.Absyn.EGe p, A arg);
    public R visit(gen.ABS.Absyn.EAdd p, A arg);
    public R visit(gen.ABS.Absyn.ESub p, A arg);
    public R visit(gen.ABS.Absyn.EMul p, A arg);
    public R visit(gen.ABS.Absyn.EDiv p, A arg);
    public R visit(gen.ABS.Absyn.EMod p, A arg);
    public R visit(gen.ABS.Absyn.ELogNeg p, A arg);
    public R visit(gen.ABS.Absyn.EIntNeg p, A arg);
    public R visit(gen.ABS.Absyn.EFunCall p, A arg);
    public R visit(gen.ABS.Absyn.EQualFunCall p, A arg);
    public R visit(gen.ABS.Absyn.ENaryFunCall p, A arg);
    public R visit(gen.ABS.Absyn.ENaryQualFunCall p, A arg);
    public R visit(gen.ABS.Absyn.EVar p, A arg);
    public R visit(gen.ABS.Absyn.EThis p, A arg);
    public R visit(gen.ABS.Absyn.EQualVar p, A arg);
    public R visit(gen.ABS.Absyn.ESinglConstr p, A arg);
    public R visit(gen.ABS.Absyn.EParamConstr p, A arg);
    public R visit(gen.ABS.Absyn.ELit p, A arg);
    public R visit(gen.ABS.Absyn.Let p, A arg);
    public R visit(gen.ABS.Absyn.If p, A arg);
    public R visit(gen.ABS.Absyn.Case p, A arg);

  }

}
