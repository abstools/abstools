// This JLex file was machine-generated by the BNF converter
package gen.ABS;

import java_cup.runtime.*;
%%
%cup
%unicode
%line
%public
%{
  String pstring = new String();
  public int line_num() { return (yyline+1); }
  public String buff() { return new String(yy_buffer,yy_buffer_index,10).trim(); }
%}
LETTER = ({CAPITAL}|{SMALL})
CAPITAL = [A-Z\xC0-\xD6\xD8-\xDE]
SMALL = [a-z\xDF-\xF6\xF8-\xFF]
DIGIT = [0-9]
IDENT = ({LETTER}|{DIGIT}|['_])
%state COMMENT
%state CHAR
%state CHARESC
%state CHAREND
%state STRING
%state ESCAPED
%%
<YYINITIAL>, { return new Symbol(sym._SYMB_0); }
<YYINITIAL>; { return new Symbol(sym._SYMB_1); }
<YYINITIAL>\* { return new Symbol(sym._SYMB_2); }
<YYINITIAL>\. { return new Symbol(sym._SYMB_3); }
<YYINITIAL>_ { return new Symbol(sym._SYMB_4); }
<YYINITIAL>< { return new Symbol(sym._SYMB_5); }
<YYINITIAL>> { return new Symbol(sym._SYMB_6); }
<YYINITIAL>= { return new Symbol(sym._SYMB_7); }
<YYINITIAL>\( { return new Symbol(sym._SYMB_8); }
<YYINITIAL>\) { return new Symbol(sym._SYMB_9); }
<YYINITIAL>\| { return new Symbol(sym._SYMB_10); }
<YYINITIAL>\{ { return new Symbol(sym._SYMB_11); }
<YYINITIAL>\} { return new Symbol(sym._SYMB_12); }
<YYINITIAL>=> { return new Symbol(sym._SYMB_13); }
<YYINITIAL>\? { return new Symbol(sym._SYMB_14); }
<YYINITIAL>& { return new Symbol(sym._SYMB_15); }
<YYINITIAL>\|\| { return new Symbol(sym._SYMB_16); }
<YYINITIAL>&& { return new Symbol(sym._SYMB_17); }
<YYINITIAL>== { return new Symbol(sym._SYMB_18); }
<YYINITIAL>!= { return new Symbol(sym._SYMB_19); }
<YYINITIAL><= { return new Symbol(sym._SYMB_20); }
<YYINITIAL>>= { return new Symbol(sym._SYMB_21); }
<YYINITIAL>\+ { return new Symbol(sym._SYMB_22); }
<YYINITIAL>- { return new Symbol(sym._SYMB_23); }
<YYINITIAL>/ { return new Symbol(sym._SYMB_24); }
<YYINITIAL>% { return new Symbol(sym._SYMB_25); }
<YYINITIAL>~ { return new Symbol(sym._SYMB_26); }
<YYINITIAL>\[ { return new Symbol(sym._SYMB_27); }
<YYINITIAL>\] { return new Symbol(sym._SYMB_28); }
<YYINITIAL>! { return new Symbol(sym._SYMB_29); }
<YYINITIAL>assert { return new Symbol(sym._SYMB_30); }
<YYINITIAL>await { return new Symbol(sym._SYMB_31); }
<YYINITIAL>builtin { return new Symbol(sym._SYMB_32); }
<YYINITIAL>case { return new Symbol(sym._SYMB_33); }
<YYINITIAL>catch { return new Symbol(sym._SYMB_34); }
<YYINITIAL>class { return new Symbol(sym._SYMB_35); }
<YYINITIAL>data { return new Symbol(sym._SYMB_36); }
<YYINITIAL>def { return new Symbol(sym._SYMB_37); }
<YYINITIAL>else { return new Symbol(sym._SYMB_38); }
<YYINITIAL>exception { return new Symbol(sym._SYMB_39); }
<YYINITIAL>export { return new Symbol(sym._SYMB_40); }
<YYINITIAL>extends { return new Symbol(sym._SYMB_41); }
<YYINITIAL>fimport { return new Symbol(sym._SYMB_42); }
<YYINITIAL>finally { return new Symbol(sym._SYMB_43); }
<YYINITIAL>from { return new Symbol(sym._SYMB_44); }
<YYINITIAL>get { return new Symbol(sym._SYMB_45); }
<YYINITIAL>if { return new Symbol(sym._SYMB_46); }
<YYINITIAL>implements { return new Symbol(sym._SYMB_47); }
<YYINITIAL>import { return new Symbol(sym._SYMB_48); }
<YYINITIAL>in { return new Symbol(sym._SYMB_49); }
<YYINITIAL>interface { return new Symbol(sym._SYMB_50); }
<YYINITIAL>let { return new Symbol(sym._SYMB_51); }
<YYINITIAL>local { return new Symbol(sym._SYMB_52); }
<YYINITIAL>module { return new Symbol(sym._SYMB_53); }
<YYINITIAL>new { return new Symbol(sym._SYMB_54); }
<YYINITIAL>null { return new Symbol(sym._SYMB_55); }
<YYINITIAL>return { return new Symbol(sym._SYMB_56); }
<YYINITIAL>skip { return new Symbol(sym._SYMB_57); }
<YYINITIAL>spawns { return new Symbol(sym._SYMB_58); }
<YYINITIAL>suspend { return new Symbol(sym._SYMB_59); }
<YYINITIAL>then { return new Symbol(sym._SYMB_60); }
<YYINITIAL>this { return new Symbol(sym._SYMB_61); }
<YYINITIAL>thisDC { return new Symbol(sym._SYMB_62); }
<YYINITIAL>throw { return new Symbol(sym._SYMB_63); }
<YYINITIAL>try { return new Symbol(sym._SYMB_64); }
<YYINITIAL>type { return new Symbol(sym._SYMB_65); }
<YYINITIAL>while { return new Symbol(sym._SYMB_66); }
<YYINITIAL>"//"[^\n]*\n { /* BNFC single-line comment */ }
<YYINITIAL>"/*" { yybegin(COMMENT); }
<COMMENT>"*/" { yybegin(YYINITIAL); }
<COMMENT>. { }
<COMMENT>[\n] { }


<YYINITIAL>{CAPITAL}({LETTER}|{DIGIT}|_|')* { return new Symbol(sym.TypeIdent, yytext().intern()); }

<YYINITIAL>"\"" { yybegin(STRING); }
<STRING>\\ { yybegin(ESCAPED); }
<STRING>\" { String foo = pstring; pstring = new String(); yybegin(YYINITIAL); return new Symbol(sym._STRING_, foo.intern()); }
<STRING>.  { pstring += yytext(); }
<ESCAPED>n { pstring +=  "\n"; yybegin(STRING); }
<ESCAPED>\" { pstring += "\""; yybegin(STRING); }
<ESCAPED>\\ { pstring += "\\"; yybegin(STRING); }
<ESCAPED>t  { pstring += "\t"; yybegin(STRING); }
<ESCAPED>.  { pstring += yytext(); yybegin(STRING); }



<YYINITIAL>{DIGIT}+ { return new Symbol(sym._INTEGER_, new Integer(yytext())); }
<YYINITIAL>{LETTER}{IDENT}* { return new Symbol(sym._IDENT_, yytext().intern()); }
<YYINITIAL>[ \t\r\n\f] { /* ignore white space. */ }
