<?xml version="1.0" encoding="UTF-8"?>
<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.abs-models</groupId>
  <artifactId>absfrontend</artifactId>
  <version>1.5.2-SNAPSHOT</version>
  <name>ABS Front-End</name>
  <description>ABS Front-End</description>
  <url>http://abs-models.org/</url>

  <scm>
    <connection>scm:git:https://github.com/abstools/abstools.git</connection>
    <developerConnection>scm:git:git@github.com:abstools/abstools.git</developerConnection>
    <url>https://github.com/abstools/abstools</url>
  </scm>

  <properties>
    <java.version>1.7</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <repo.dir>${project.basedir}/repo</repo.dir>
    <!-- dependencies will be copied here for ant -->
    <antlib.dir>${project.build.directory}/dependency</antlib.dir>
    <skipTests>true</skipTests>
    <skipInhEqCheck>false</skipInhEqCheck>

    <src.dir>${project.basedir}/src</src.dir>
    <test.dir>${project.basedir}/tests</test.dir>
    <gen.dir>target/generated-sources</gen.dir>
    <bash.dir>${src.dir}/bash</bash.dir>
    <bash.build.dir>${project.build.directory}/bin/bash</bash.build.dir>
    <win.dir>${src.dir}/win</win.dir>
    <win.build.dir>${project.build.directory}/bin/win</win.build.dir>

    <dist.dir>${basedir}/dist</dist.dir>

    <ast.package>abs.frontend.ast</ast.package>
    <ast.gen.dir>${gen.dir}/abs/frontend</ast.gen.dir>

    <apidoc.dir>${gen.dir}/docs/api</apidoc.dir>

    <!-- need to bundle this as resource -->
    <maude.interpreter>${src.dir}/abs/backend/maude/</maude.interpreter>

    <!--dependency versions-->
    <easymock.version>3.0</easymock.version>
    <junit.version>4.11</junit.version>
    <hamcrest.version>1.3</hamcrest.version>
    <jastadd.version>2.2.2</jastadd.version>
    <antlr.version>4.6</antlr.version>
    <sat4j.version>2.3.0</sat4j.version>
    <choco-solver.version>2.1.1</choco-solver.version>
    <semisolver.version>1.0.0</semisolver.version>
    <apfloat.version>1.8.2</apfloat.version>
    <objenesis.version>1.2</objenesis.version>
    <cglib.version>2.2.2</cglib.version>
    <ecj.version>4.6.1</ecj.version>
    <guava.version>20.0</guava.version>
    <commons-io.version>2.5</commons-io.version>
    <jsr305.version>2.0.1</jsr305.version>
  </properties>

  <repositories>
    <repository>
      <id>data-local</id>
      <name>data</name>
      <url>file://${repo.dir}</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>${easymock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib-nodep</artifactId>
      <version>${cglib.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.objenesis</groupId>
      <artifactId>objenesis</artifactId>
      <version>${objenesis.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4-runtime</artifactId>
      <version>${antlr.version}</version>
    </dependency>
    <dependency>
      <groupId>org.sat4j</groupId>
      <artifactId>org.sat4j.core</artifactId>
      <version>${sat4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.sat4j</groupId>
      <artifactId>org.sat4j.pb</artifactId>
      <version>${sat4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.sat4j</groupId>
      <artifactId>org.sat4j.maxsat</artifactId>
      <version>${sat4j.version}</version>
    </dependency>

    <!--TODO: choco-solver 3.3.0+ is available in central-->
    <dependency>
      <groupId>org.choco-solver</groupId>
      <artifactId>choco-solver</artifactId>
      <version>${choco-solver.version}</version>
    </dependency>
    <dependency>
      <groupId>com.gzoumix</groupId>
      <artifactId>semisolver</artifactId>
      <version>${semisolver.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apfloat</groupId>
      <artifactId>apfloat</artifactId>
      <version>${apfloat.version}</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jdt.core.compiler</groupId>
      <artifactId>ecj</artifactId>
      <version>${ecj.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>${jsr305.version}</version>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>${src.dir}</sourceDirectory>
    <testSourceDirectory>${test.dir}</testSourceDirectory>
    <resources>
      <resource>
        <directory>${src.dir}</directory>
        <includes>
          <include>**/ABS.g4</include>
          <include>**/*.abs</include>
        </includes>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
            <configuration>
              <failOnError>false</failOnError>
              <filesets>
                <fileset>
                  <directory>${dist.dir}</directory>
                </fileset>
                <fileset>
                  <directory>${basedir}/gen-eclipse</directory>
                </fileset>
              </filesets>
              <verbose>true</verbose>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.0.2</version>
        <configuration>
          <stripVersion>true</stripVersion>
          <excludeArtifactIds>ant, ant-launcher, commons-cli, antlr4-runtime</excludeArtifactIds>
          <artifactItems>
            <artifactItem>
              <groupId>com.google.code.findbugs</groupId>
              <artifactId>findbugs-ant</artifactId>
              <version>1.3.9</version>
            </artifactItem>
            <artifactItem>
              <groupId>org.antlr</groupId>
              <artifactId>antlr4</artifactId>
              <version>${antlr.version}</version>
              <classifier>complete</classifier>
            </artifactItem>
            <artifactItem>
              <groupId>org.jastadd</groupId>
              <artifactId>jastadd</artifactId>
              <version>${jastadd.version}</version>
            </artifactItem>
          </artifactItems>
        </configuration>
        <executions>
          <execution>
            <id>copy-jastadd</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.jastadd</groupId>
                  <artifactId>jastadd</artifactId>
                  <version>${jastadd.version}</version>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-maven-plugin</artifactId>
        <version>${antlr.version}</version>
        <executions>
          <execution>
            <id>antlr</id>
            <goals>
              <goal>antlr4</goal>
            </goals>
            <configuration>
              <sourceDirectory>${src.dir}</sourceDirectory>
              <outputDirectory>${gen.dir}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <showDeprecation>true</showDeprecation>
          <debug>true</debug> <!-- TODO: should this be enabled?-->
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.20.1</version>
        <configuration>
          <test>AllFrontendTests</test>
          <forkCount>0</forkCount>
          <testFailureIgnore>true</testFailureIgnore>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>3.0.5</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <mainClass>abs.frontend.parser.Main</mainClass>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <!--TODO: add versions -->
            </manifest>
          </archive>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>genast</id>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <target name="genast" xmlns:if="ant:if" xmlns:unless="ant:unless">
                <taskdef name="jastadd" classname="org.jastadd.JastAddTask" classpath="${antlib.dir}/jastadd.jar"/>
                <uptodate property="genast.notRequired" targetfile="${ast.gen.dir}/ast/ASTNode.java">
                  <srcfiles dir="${src.dir}" includes="abs/**/*.ast"/>
                  <srcfiles dir="${src.dir}" includes="abs/**/*.jrag"/>
                  <srcfiles dir="${src.dir}" includes="abs/**/*.jadd"/>
                </uptodate>
                <echo if:set="genast.notRequired">No change in *.ast / *.jadd / *.jrag files, skipping.</echo>
                <mkdir dir="${gen.dir}"/>
                <jastadd package="${ast.package}" rewrite="" visitCheck="false" outdir="${gen.dir}" indent="4space"
                  debug="true" noinheqcheck="${skipInhEqCheck}" unless:set="genast.notRequired">
                  <fileset dir="${src.dir}">
                    <include name="abs/**/*.ast"/>
                    <include name="abs/**/*.jrag"/>
                    <include name="abs/**/*.jadd"/>
                  </fileset>
                </jastadd>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>genruntime</id>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>compile</phase>
            <configuration>
              <target>
                <echo message="Trying to precompile erlang libraries, error is safe to ignore"/>
                <exec executable="escript" dir="${src.dir}/abs/backend/erlang/runtime/absmodel"
                  failonerror="false" failifexecutionfails="false">
                  <arg value="../bin/rebar"/>
                  <arg value="compile"/>
                </exec>
                <copy todir="${project.build.outputDirectory}/abs/backend/erlang">
                  <fileset dir="${src.dir}/abs/backend/erlang/" includes="runtime/**/*"/>
                </copy>
                <copy file="${src.dir}/abs/backend/maude/abs-interpreter.maude"
                  todir="${project.build.outputDirectory}/abs/backend/maude"/>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>genshell</id>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <target>
                <mkdir dir="${dist.dir}" />
                <copy todir="${dist.dir}" overwrite="true">
                  <fileset dir="${project.build.directory}">
                    <include name="absfrontend-*-jar-with-dependencies.jar" />
                  </fileset>
                  <globmapper from="*" to="absfrontend.jar" />
                </copy>
                <copy todir="${bash.build.dir}">
                  <fileset id="shellfiles" dir="${bash.dir}">
                    <include name="*"/>
                  </fileset>
                  <filterset>
                    <filter token="BASEDIR" value="${basedir}"/>
                  </filterset>
                </copy>
                <copy todir="${win.build.dir}">
                  <fileset id="winshellfiles" dir="${win.dir}">
                    <include name="*"/>
                  </fileset>
                </copy>
                <chmod perm="ugo+x">
                  <fileset dir="${bash.build.dir}">
                    <include name="*"/>
                  </fileset>
                </chmod>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.4</version>
        <reportSets>
          <reportSet>
            <id>aggregate</id>
            <reports>
              <report>aggregate</report>
            </reports>
          </reportSet>
        </reportSets>
        <configuration>
          <failOnError>false</failOnError>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>tests-frontend</id>
      <properties>
        <skipTests>false</skipTests>
      </properties>
    </profile>
    <profile>
      <id>dist</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>2.10.4</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.0.1</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
