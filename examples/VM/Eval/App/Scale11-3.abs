module M;
export *;
interface A {}
features F1,F2,F3,F4,F5,F6,F7,F8,F9,F10,F11 with (((F9 || F11) && (!F5 || (F6 && F2))) && ((F9 || !F3) || (!F6 || !F4))) || F7;
delta D1;
modifies interface A{
    adds Unit m();
}
delta D2;
modifies interface A{
    removes Unit m();
}
delta D3;
modifies interface A{
    adds Unit m();
}
delta D4;
modifies interface A{
    adds Unit m();
}
delta D5;
modifies interface A{
    removes Unit m();
}
delta D6;
modifies interface A{
    removes Unit m();
}
delta D7;
modifies interface A{
    removes Unit m();
}
delta D8;
modifies interface A{
    adds Unit m();
}
delta D9;
modifies interface A{
    removes Unit m();
}
delta D10;
modifies interface A{
    adds Unit m();
}
delta D11;
modifies interface A{
    removes Unit m();
}

delta D1 when ((F1 || F1) && (F1 && F1)) && !F1;
delta D2 when (((F1 || F2) || (F2 && !F2)) && (((F2 || F2) && (F2 && F2)) || ((F2 && F2) || (F1 && F2)))) && (F2 || (F1 || F1));
delta D3 when (F1 || F3) && (F2 && ((F2 || F1) || !(F2 || F3)));
delta D4 when !!(!F2 || ((F4 && F1) && (F4 || F4)));
delta D5 when (((F4 && F4) && (F3 || F1)) && (F2 || ((F3 || F2) || F2))) || (F3 || F5);
delta D6 when F3 || (!(!F4 || !F2) && !(F1 && F5));
delta D7 when !!(!!F2 && F2);
delta D8 when !(((F3 || F5) && (F1 || F5)) || !F1) && (((F3 && F3) || (F3 || F5)) || !F3);
delta D9 when (!((F5 || F1) || !F2) || (!F1 && F2)) && (!F1 && F5);
delta D10 when !(!!F4 || (!F5 && (F3 && F5))) && (!(F4 && (F4 && F5)) && (F5 || F1));
delta D11 when (F1 && F5) || (((F3 && F5) && (!F5 && (F2 || F5))) || (F4 && F1));
module Main;
import * from M;
{}