/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

// Make sure all subprojects use the same plugin versions; see
// https://docs.gradle.org/current/userguide/plugins.html#sec:subprojects_plugins_dsl
plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    // ./gradlew dependencyUpdates to check for library updates
    id "com.github.ben-manes.versions" version "0.52.0"
}

// https://stackoverflow.com/questions/15061277/how-can-i-get-the-current-git-branch-in-gradle/36760102#36760102
def gitBranch() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    // shorter version, but does not print errors:
    // def branch = 'git rev-parse --abbrev-ref HEAD'.execute().text.split()[0]
    branch
}

def absVersion() {
    // Returns (tag name)-(commits since tag)-(commit id)
    // e.g., v1.10.0-1-10123abc
    def version = "unknown-not_compiled_in_git_repo-unknown"
    def proc = "git describe --tags --long".execute()
    // We use this longer form so we print any git error messages.
    proc.in.eachLine { line -> version = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    version
}

subprojects {
    repositories {
        mavenCentral()
    }
    group = 'org.abs_models'
    version = absVersion()
}
